name: Build and Deploy

on:
  push:
    branches:
      - "master"

jobs:
  # Optional quick test check (non-blocking)
  quick-check:
    runs-on: blacksmith-4vcpu-ubuntu-2404
    continue-on-error: true  # Don't block deployment
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build shared library
        run: npm run build:lib

      - name: Compile TypeScript
        run: npm run tsc

  # Main deployment job
  deploy:
    runs-on: blacksmith-4vcpu-ubuntu-2404
    needs: quick-check
    if: always()  # Always deploy regardless of quick-check result
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Build Docker image
        run: |
          # Get version information
          BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          GIT_COMMIT=$(git rev-parse HEAD)
          GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          
          echo "Building Docker image with version info:"
          echo "  Version: $PACKAGE_VERSION"
          echo "  Commit: $GIT_COMMIT"
          echo "  Branch: $GIT_BRANCH"
          echo "  Build Date: $BUILD_DATE"
          
          docker build \
            --build-arg BUILD_DATE="$BUILD_DATE" \
            --build-arg GIT_COMMIT="$GIT_COMMIT" \
            --build-arg GIT_BRANCH="$GIT_BRANCH" \
            -t ${{ vars.IMAGE_NAME }} \
            -f deploy.Dockerfile .
        
      - name: Verify version information
        run: |
          echo "Verifying version information in built image..."
          docker run --rm ${{ vars.IMAGE_NAME }} node -e "
            const fs = require('fs');
            const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
            console.log('Package version:', packageJson.version);
            console.log('Build date:', process.env.BUILD_DATE);
            console.log('Git commit:', process.env.GIT_COMMIT);
            console.log('Git branch:', process.env.GIT_BRANCH);
            console.log('Environment:', process.env.ENV_NAME || 'production');
          "
        
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          
      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 600
        
      - name: Tag image
        run: docker tag bni-deploy ${{ vars.DIGITALOCEAN_REGISTRY }}/${{ vars.IMAGE_NAME }}
        
      - name: Push image to DO Container Registry
        run: docker push ${{ vars.DIGITALOCEAN_REGISTRY }}/${{ vars.IMAGE_NAME }}
        
      - name: Report status
        run: |
          if [[ "${{ needs.quick-check.result }}" == "failure" ]]; then
            echo "⚠️ WARNING: Quick checks failed but deployment proceeded"
            echo "Please review any issues and run full test suite"
          else
            echo "✅ Deployment completed successfully"
          fi
